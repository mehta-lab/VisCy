[build-system]
requires = ["setuptools", "setuptools-scm[toml]"]
build-backend = "setuptools.build_meta"

[project]
name = "viscy"
description = "computer vision for image-based phenotyping of single cells"
readme = "README.md"
requires-python = ">=3.11"
license = "BSD-3-Clause"
license-files = ["LICENSE"]
authors = [{ name = "CZ Biohub SF", email = "compmicro@czbiohub.org" }]
classifiers = [
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "iohub[tensorstore]>=0.3.0a2",
    "kornia",
    "torch>=2.4.1",
    "timm>=0.9.5",
    "tensorboard>=2.13.0",
    "lightning>=2.3.0",
    "monai>=1.4.0",
    "jsonargparse[signatures]>=4.20.1",
    "scikit-image",
    "matplotlib>=3.9.0",
    "numpy",
    "xarray",
    "pytorch-metric-learning>2.0.0"]
dynamic = ["version"]

[project.optional-dependencies]
metrics = [
    "cellpose>=3.0.10",
    "scikit-learn>=1.1.3",
    "imbalanced-learn>=0.12.0",
    "torchmetrics[detection]>=1.6.3",
    "ptflops>=0.7",
    "umap-learn",
    "captum>=0.7.0",
    "mahotas",
]
phate = [
    "phate",
]
examples = ["napari", "jupyter", "jupytext", "transformers>=4.51.3"]
visual = [
    "ipykernel",
    "graphviz",
    "torchview",
    "seaborn",
    "plotly",
    "nbformat",
    "cmap",
    "dash",
]
dev = [
    "viscy[metrics,phate,examples,visual]",
    "pytest",
    "pytest-cov",
    "hypothesis",
    "ruff",
    "onnxruntime",
]

[project.scripts]
viscy = "viscy.cli:main"

[tool.setuptools]
packages = ["viscy"]

[tool.setuptools_scm]
write_to = "viscy/_version.py"

[tool.ruff]
line-length = 88
src = ["viscy", "tests"]
extend-include = ["*.ipynb"]
target-version = "py311"
# Exclude the following for now. Later on we should check every Python file.
extend-exclude = ["viscy/scripts/*", "applications/*", "examples/*"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
select = [
  "D",      # pydocstyle
  "I",      # isort
]
ignore = [
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D105", # __magic__ methods are often self-explanatory, allow missing docstrings
  "D107", # Missing docstring in __init__
  # Disable one in each pair of mutually incompatible rules
  "D203", # We don’t want a blank line before a class docstring
  "D213", # <> We want docstrings to start immediately after the opening triple quote
  "D400", # first line should end with a period [Bug: doesn’t work with single-line docstrings]
  "D401", # First line should be in imperative mood; try rephrasing
]
per-file-ignores."tests/*" = ["D"]
pydocstyle.convention = "numpy"